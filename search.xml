<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git教程</title>
      <link href="/2024/11/10/Git%E6%95%99%E7%A8%8B/"/>
      <url>/2024/11/10/Git%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Git是目前世界上最先进的<strong>分布式版本控制系统</strong>（没有之一）。</p><h5 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h5><p>​是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。</p><p>​Git是用C语音开发的！</p><h4 id="集中式VS分布式"><a href="#集中式VS分布式" class="headerlink" title="集中式VS分布式"></a>集中式VS分布式</h4><p>​<strong>集中式：</strong>所有的资源、数据和计算都集中在一个或少数几个中心节点（服务器）上，其他终端设备从这些中心获取资源和服务。</p><p>​<strong>分布式：</strong>资源、数据和计算分布在多个独立的节点上，每个节点可以进行自主的计算和存储操作。</p><h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>​<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>​官网直接默认安装即可，安装完成后打开Git Bash进行设置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br><span class="line">    --global代表你所用的机器上所有的Git仓库都会使用这个配置。</span><br></pre></td></tr></table></figure><p>​因为Git是分布式版本控制系统，所以，每个机器都应该自报家门：名字和Email地址。</p><h4 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h4><p>​版本库又名仓库（Repository）</p><p>windows环境下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 创建空目录并转到该目录</span></span><br><span class="line">mkdir learngit# 创建learngit文件夹</span><br><span class="line">cd learngit# 跳转到learngit文件夹</span><br><span class="line">chdir# 显示当前目录， linux使用pwd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 将该目录变成Git可以管理的仓库（此时会多一个.git目录）</span></span><br><span class="line">git init</span><br><span class="line">Initialized empty Git repository in C:/Users/xiaop/learngit/.git/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">也可以将不空的目录变成Git可以管理的仓库</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.把文件添加到版本库（文件必须放入Git可以管理的仓库目录下）</span></span><br><span class="line">git add readme.txt# 可以同时</span><br><span class="line"></span><br><span class="line">git commit -m &quot;wrote a readme file&quot;</span><br><span class="line">[master (root-commit) 002b09e] wrote a readme file</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line"> create mode 100644 readme.txt</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-m 后面输入的是提交说明，commit可以同时提交多个文件。</span></span><br></pre></td></tr></table></figure><p>​</p><h4 id="时光穿梭机"><a href="#时光穿梭机" class="headerlink" title="时光穿梭机"></a>时光穿梭机</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看仓库当前状态。</span></span><br><span class="line">git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">        modified:   readme.txt</span><br><span class="line"></span><br><span class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">readme.txt被修改过了，但是还没有准备提交的修改。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看修改内容</span></span><br><span class="line">git diff</span><br><span class="line">diff --git a/readme.txt b/readme.txt</span><br><span class="line">index d8036c1..9247db6 100644</span><br><span class="line">--- a/readme.txt</span><br><span class="line">+++ b/readme.txt</span><br><span class="line">@@ -1,2 +1,2 @@</span><br><span class="line">-Git is a version control system.</span><br><span class="line">-Git is free software.</span><br><span class="line">\ No newline at end of file</span><br><span class="line">+Git is a distributed version control system.</span><br><span class="line">+Git is free software.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意查看添加与提交之后的 status</span></span><br></pre></td></tr></table></figure><h4 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看历史记录</span></span><br><span class="line">git log</span><br><span class="line">commit 5b58867cad48d84682b63e4c7a44634090ee2a48 (HEAD -&gt; master)</span><br><span class="line">Author: xp-starry &lt;xiaopen.li@outlook.com&gt;</span><br><span class="line">Date:   Sun Nov 10 22:43:52 2024 +0800</span><br><span class="line"></span><br><span class="line">    append GPL</span><br><span class="line"></span><br><span class="line">commit b269c9bb918c6156fceae75d7f3833b81c7ee0d2</span><br><span class="line">Author: xp-starry &lt;xiaopen.li@outlook.com&gt;</span><br><span class="line">Date:   Sun Nov 10 22:41:06 2024 +0800</span><br><span class="line"></span><br><span class="line">    add distributed</span><br><span class="line"></span><br><span class="line">commit 002b09e0d4905a631242922d24cfef7de02861ae</span><br><span class="line">Author: xp-starry &lt;xiaopen.li@outlook.com&gt;</span><br><span class="line">Date:   Sun Nov 10 22:21:23 2024 +0800</span><br><span class="line"></span><br><span class="line">    wrote a readme file</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一长串数字代表版本号，如果嫌输出信息太多可以添加参数 --pretty=oneline</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=oneline</span></span><br><span class="line">5b58867cad48d84682b63e4c7a44634090ee2a48 (HEAD -&gt; master) append GPL</span><br><span class="line">b269c9bb918c6156fceae75d7f3833b81c7ee0d2 add distributed</span><br><span class="line">002b09e0d4905a631242922d24cfef7de02861ae wrote a readme file</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">版本回退</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset --hard HEAD^</span></span><br><span class="line">HEAD is now at b269c9b add distributed</span><br><span class="line"></span><br><span class="line">--hard 回退到上个版本的已提交状态</span><br><span class="line">--soft 回退到上个版本的未提交状态</span><br><span class="line">--mixed 回退到上个版本已添加但未提交的状态</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只要不关闭当前命令行窗口，就可以还原到 append GPL版本，找到其版本号（版本号不需要写全）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reset --hard 5b5886</span></span><br><span class="line">HEAD is now at 5b58867 append GPL</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">假如关闭了窗口，可以通过如下命令查看历史命令，找到版本号进行回退</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reflog</span></span><br><span class="line">5b58867 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to 5b5886</span><br><span class="line">b269c9b HEAD@&#123;1&#125;: reset: moving to HEAD^</span><br><span class="line">5b58867 (HEAD -&gt; master) HEAD@&#123;2&#125;: commit: append GPL</span><br><span class="line">b269c9b HEAD@&#123;3&#125;: commit: add distributed</span><br><span class="line">002b09e HEAD@&#123;4&#125;: commit (initial): wrote a readme file</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件内容</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> readme.txt</span></span><br><span class="line">Git is a distributed version control system.</span><br><span class="line">Git is free software.</span><br></pre></td></tr></table></figure><p>​Git版本回退：Git在内部有一个指向当前版本的<strong>HEAD</strong>指针，当你回退版本的时候，Git仅仅是修改HEAD指向，顺便把工作区文件更新。</p><img src="C:\Users\xiaop\AppData\Roaming\Typora\typora-user-images\image-20241110230155208.png" alt="image-20241110230155208" style="zoom: 50%;" /><img src="C:\Users\xiaop\AppData\Roaming\Typora\typora-user-images\image-20241110230202150.png" alt="image-20241110230202150" style="zoom:50%;" /><h5 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h5><ul><li><code>HEAD</code>指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li><li>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</li><li>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/11/09/hello-world/"/>
      <url>/2024/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
